# Day 4
def next_gap(gap):
    if gap <= 1:
        return 0
    return (gap // 2) + (gap % 2)  
def merge(arr1, arr2, m, n):
    gap = m + n
    gap = next_gap(gap)  
    while gap > 0:
        i = 0
        while i + gap < m:
            if arr1[i] > arr1[i + gap]:
                arr1[i], arr1[i + gap] = arr1[i + gap], arr1[i]
            i += 1
        j = gap - m if gap > m else 0
        while i < m and j < n:
            if arr1[i] > arr2[j]:
                arr1[i], arr2[j] = arr2[j], arr1[i]
            i += 1
            j += 1
        j = 0
        while j + gap < n:
            if arr2[j] > arr2[j + gap]:
                arr2[j], arr2[j + gap] = arr2[j + gap], arr2[j]
            j += 1
        gap = next_gap(gap)

# Test cases
arr1 = [1, 3, 5]
arr2 = [2, 4, 6]
merge(arr1, arr2, len(arr1), len(arr2))
print(arr1)  
print(arr2)  

arr1 = [10, 12, 14]
arr2 = [1, 3, 5]
merge(arr1, arr2, len(arr1), len(arr2))
print(arr1) 
print(arr2) 

arr1 = [2, 3, 8]
arr2 = [4, 6, 10]
merge(arr1, arr2, len(arr1), len(arr2))
print(arr1)  
print(arr2)  

arr1 = [1]
arr2 = [2]
merge(arr1, arr2, len(arr1), len(arr2))
print(arr1)  
print(arr2)  
